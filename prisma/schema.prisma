// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  roadmap       Roadmap[]
  profile       UserProfile?
}

model UserProfile {
  id                String   @id @default(cuid())
  userId            String   @unique
  education         String
  stream            String
  situation         String
  environment       String
  activities        String[]
  learningStyles    String[]
  uncertainty       String
  tradeoff          String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
model Roadmap {
  id  String @id @default(cuid())
  careerPath String
  skillsToLearn SkillToLearn[]
  recommendedProjects Project[]
  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
}
model Project {
  id String @id @default(cuid())
  title String
  description String
  roadmapId String
  roadmap Roadmap @relation(fields: [roadmapId], references: [id], onDelete: Cascade)
}
model SkillToLearn {
  id String @id @default(cuid())
  skill String
  done Boolean
  roadmapId String
  roadmap Roadmap @relation(fields: [roadmapId], references: [id], onDelete: Cascade)
}